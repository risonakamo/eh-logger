@import (reference) "../../../sharedcss/types-colours.less";
@import (reference) "../../../sharedcss/shared-colours.less";

// the total of these values must equal the delete timing of the logrow, or shorter
// (animation will cut off if shorter)
@delete-timing: 1500ms; //total hold time for delete
@hold-animation-delay: .8s; //time before animations starts playing as user is holding
@fill-animation-length: @delete-timing - @hold-animation-delay; //time animation lasts when it begins

.logs-table2
{
    display: flex;
    height: 100%;
    flex-direction: column;

    .the-log-rows
    {
        flex: 1;
        height: 100%;
        overflow: auto;
    }

    .log-row
    {
        height: 23px;
        display: flex;
        position: relative;
        padding: 2px 0 4px 0;
        font-size: 13px;
        opacity: 1;
        box-sizing: border-box;
        transition: .15s background-color;
        overflow: hidden;
        --type-colour: @default-green;
        --type-colour-faded: fade(@default-green,20%);
        .generate-colour-classes();

        .log-col
        {
            padding-left: 8px;
            box-sizing: border-box;
            white-space: nowrap;
            overflow: hidden;

            &.date
            {
                width: 90px;
                min-width: 90px;
            }

            &.type
            {
                width: 30px;
                min-width: 30px;
                padding-left: 0;
                color: var(--type-colour);
            }

            &.group
            {
                width: 130px;
                min-width: 130px;
            }
        }

        &:hover
        {
            background-color: var(--type-colour-faded);
        }

        &.header-row
        {
            font-weight: bold;
            margin-bottom: 5px;
            letter-spacing: .5px;

            &:hover
            {
                background-color: transparent;
            }
        }

        .fill-bar
        {
            position: absolute;
            height: 100%;
            width: 0%;
            top: 0;
            background-color: var(--type-colours-faded2);
            z-index: -1;

            &.filling
            {
                // animation duration + delay must be the same as the hold timer
                // in the element
                animation: @fill-animation-length fill-width-expand linear @hold-animation-delay;
                animation-fill-mode: forwards;
            }
        }
    }
}

@keyframes fill-width-expand
{
    from
    {
        width: 0%;
    }

    to
    {
        width: 100%;
    }
}